apply plugin: 'groovy'

version = '1.0.0'

repositories {
  if ( project.hasProperty('localJarDir') )
    flatDir {
      name 'localJars'
      dirs project.localJarDir
      }
  mavenCentral()
}

buildscript {
  repositories {
    // bother, we can't "add" from "project.repositories", we have to repeat
    if ( project.hasProperty('localJarDir') )
      flatDir {
        name 'localJars'
        dirs project.localJarDir
        }
      mavenCentral()
      }
  dependencies {
    classpath 'org.codehaus.groovy:groovy-all:2.1.9'
    }
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.1.9'
  testCompile 'junit:junit:4.+'
  testCompile fileTree( dir:'build/libs/', includes:[ "groovy-jja-extensions-${version}.jar".toString() ] )
}

group = 'net.sinequanon'

task generateModule << {
  def extensionFiles = sourceSets.main.groovy.with { g ->
    g.findAll {
      it.parentFile.name == 'extensions' && it.name.endsWith( 'groovy' )
    }.collect {
      it.toString().replaceAll( File.separator, '.' )
    }.collect {
      it - ( g.srcDirs as List )[0].toString().replaceAll( File.separator, '.' )
    }.collect {
      it[ 1..-8 ]
    }.join( ',' )
  }

  new File( "$buildDir/classes/main/" +
    org.codehaus.groovy.runtime.m12n.ExtensionModuleScanner.MODULE_META_INF_FILE
    // 2.1.9, 2.2.1 : org.codehaus.groovy.runtime.m12n.ExtensionModuleScanner.MODULE_META_INF_FILE
    // deprecated : org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.MODULE_META_INF_FILE
    // ===> META-INF/services/org.codehaus.groovy.runtime.ExtensionModule
    ).with { f ->
    println "f ${f}"
    f.parentFile?.mkdirs()
    f.withWriter { w ->
      w.writeLine 'moduleName=groovy-jja-extensions'
      w.writeLine "moduleVersion=$version"
      w.writeLine "extensionClasses=$extensionFiles"
      w.writeLine 'staticExtensionClasses='
    }
  }
}

groovydoc {
  use = true
  destinationDir = new File( "${project.buildDir.path}/groovydoc", project.version )
  header = '<a href="https://github.com/jja/groovy-jja-extensions">groovy-jja-extensions</a>'
  footer = null

  link 'http://docs.oracle.com/javase/7/docs/api/', 'java.', 'javax.'
  link 'http://groovy.codehaus.org/api/', 'groovy.', 'org.codehaus.groovy.'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier 'javadoc'
  from groovydoc.destinationDir
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives jar
  archives sourcesJar
  archives groovydocJar
}

uploadArchives {
  repositories {
    if ( project.hasProperty('localJarDir') )
      add project.repositories.localJars
    }
  }

// Hook up dependencies
jar.dependsOn( generateModule ) 
test.dependsOn( jar )
uploadArchives.dependsOn( test )
